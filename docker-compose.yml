services:
  db:
    image: postgres:15
    container_name: meowshop_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=meowshop
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7
    container_name: meowshop_redis
    restart: always

  minio:
    image: minio/minio:latest
    container_name: meowshop_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    restart: always


  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: meowshop_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl --silent --fail http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: meowshop_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:123@db:5432/meowshop
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadminAdd commentMore actions
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=meowshop
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: always

  superset:
    build:
      context: .
      dockerfile: superset.Dockerfile
    container_name: meowshop_superset
    environment:
      - SUPERSET_SECRET_KEY=supersecretkey
    ports:
      - "8088:8088"
    volumes:
      - superset_home:/app/superset_home
    depends_on:
      - db
      - redis
    restart: always
    command: >
      /bin/sh -c "
      superset db upgrade &&
      superset fab create-admin --username admin --firstname Admin --lastname User --email admin@example.com --password admin &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088
      "
  loki:
    image: grafana/loki:2.9.0
    container_name: meowshop_loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: always

  promtail:
    image: grafana/promtail:2.9.0
    container_name: meowshop_promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./promtail-config.yml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    restart: always

  grafana:
    image: grafana/grafana:10.2.2
    container_name: meowshop_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    restart: always

volumes:
  postgres_data:
  elasticsearch_data:
  superset_home:
  minio_data:
  grafana_data: