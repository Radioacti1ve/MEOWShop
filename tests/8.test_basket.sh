#!/bin/bash

USERNAME="user$(date +%s)"
PASSWORD="password123"
EMAIL="${USERNAME}@example.com"

echo "üìå –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $USERNAME"
curl -s -X POST http://localhost:8000/auth/register -H "Content-Type: application/json" -d '{
  "username": "'"$USERNAME"'",
  "email": "'"$EMAIL"'",
  "password": "'"$PASSWORD"'"
}'
echo -e "\n"

echo "üìå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $USERNAME"
RESPONSE=$(curl -s -X POST http://localhost:8000/auth/login \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"$USERNAME\", \"password\":\"$PASSWORD\"}")

echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ª–æ–≥–∏–Ω: $RESPONSE"
TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')

if [[ "$TOKEN" == "null" || -z "$TOKEN" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω"
  exit 1
fi

echo -e "\n‚úÖ –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω: $TOKEN"

TOTAL_TESTS=0
FAILED_TESTS=0

# === –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É ===
echo "üõí –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä product_id=1, quantity=2"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "http://localhost:8000/catalog/cart/add?product_id=1&quantity=2" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Product added to cart"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 1: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

echo "üõí –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä product_id=2, quantity=1"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "http://localhost:8000/catalog/cart/add?product_id=2&quantity=1" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Product added to cart"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 2: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –£–¥–∞–ª—è–µ–º –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä ===
echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä product_id=1"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X DELETE "http://localhost:8000/catalog/cart/remove?product_id=1" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Product removed from cart"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 3: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É ===
echo "üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X GET http://localhost:8000/catalog/cart/ \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä 1 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ
if echo "$BODY" | jq -e '.items[] | select(.product_id == 1)' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –¢–æ–≤–∞—Ä product_id=1 –≤—Å—ë –µ—â—ë –≤ –∫–æ—Ä–∑–∏–Ω–µ"
    TEST_RESULT=1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä 2 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ
if ! echo "$BODY" | jq -e '.items[] | select(.product_id == 2)' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –¢–æ–≤–∞—Ä product_id=2 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 4: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 2 ===
echo "üîº –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 2"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X PATCH "http://localhost:8000/catalog/cart/increase?product_id=2&quantity=2" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Quantity increased by 2"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 5: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 1 ===
echo "üîΩ –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 1"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X PATCH "http://localhost:8000/catalog/cart/decrease?product_id=2&quantity=1" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Quantity decreased by 1"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 6: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É ===
echo "üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X GET http://localhost:8000/catalog/cart/ \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ 2
if ! echo "$BODY" | jq -e '.items[] | select(.product_id == 2 and .quantity == 2)' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 7: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 5 (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é) ===
echo "üîΩ –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ product_id=2 –Ω–∞ 5 (–¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å—Å—è)"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X PATCH "http://localhost:8000/catalog/cart/decrease?product_id=2&quantity=5" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Product removed from cart due to zero quantity"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 8: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ (product_id=10) ===
echo "üö´ –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä product_id=10, quantity=1 (–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "http://localhost:8000/catalog/cart/add?product_id=10&quantity=1" \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "400" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 400, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

if ! echo "$BODY" | jq -e '.detail == "Not enough stock"' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 9: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"
echo -e "\n"

# === –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã ===
echo "üì¶ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:"
TEST_RESULT=0
TOTAL_TESTS=$((TOTAL_TESTS + 1))
RESPONSE=$(curl -s -w "\n%{http_code}" -X GET http://localhost:8000/catalog/cart/ \
  -H "Authorization: Bearer $TOKEN")
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

if [[ $HTTP_CODE != "200" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω $HTTP_CODE"
    TEST_RESULT=1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä 10 –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É
if echo "$BODY" | jq -e '.items[] | select(.product_id == 10)' >/dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –¢–æ–≤–∞—Ä product_id=10 –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω–µ"
    TEST_RESULT=1
fi

[[ $TEST_RESULT == 1 ]] && FAILED_TESTS=$((FAILED_TESTS + 1))
echo "$BODY" | jq .
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 10: $TEST_RESULT (0=—É—Å–ø–µ—Ö, 1=–æ—à–∏–±–∫–∞)"

# === –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===
echo -e "\n=== –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ==="
echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: $FAILED_TESTS"
echo "–£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: $((TOTAL_TESTS - FAILED_TESTS))"
[[ $FAILED_TESTS -gt 0 ]] && exit 1 || exit 0
