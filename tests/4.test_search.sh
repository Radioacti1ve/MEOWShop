#!/bin/bash
set -e

BASE_URL="http://localhost:8000"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
TOTAL_TESTS=13
PASSED_TESTS=0
declare -a FAILED_TESTS

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    local response="$1"
    local expected_status="${2:-200}"
    local http_code=$(echo "$response" | grep "HTTP_CODE:" | cut -d':' -f2)
    
    if [ "$http_code" = "$expected_status" ]; then
        echo -e "${GREEN}‚úì HTTP —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–Ω—ã–π: $http_code${NC}"
        return 0
    else
        echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: $http_code (–æ–∂–∏–¥–∞–ª—Å—è: $expected_status)${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
get_response_body() {
    echo "$1" | sed '/HTTP_CODE/d'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª–µ–π –≤ JSON
check_json_structure() {
    local json="$1"
    local field="$2"
    local error_message="$3"
    
    if echo "$json" | jq -e ".$field" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì –ü–æ–ª–µ $field –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
        return 0
    else
        echo -e "${RED}‚úó –û—à–∏–±–∫–∞: $error_message${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
check_results_count() {
    local json="$1"
    local min_count="$2"
    local field="${3:-items}"
    
    local count=$(echo "$json" | jq ".$field | length")
    if [ "$count" -ge "$min_count" ]; then
        echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $count${NC}"
        return 0
    else
        echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $count (–æ–∂–∏–¥–∞–ª–æ—Å—å –º–∏–Ω–∏–º—É–º $min_count)${NC}"
        return 1
    fi
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Å—Å–∏–≤–∞
check_array_response() {
    local json="$1"
    local min_count="$2"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç —ç—Ç–æ –º–∞—Å—Å–∏–≤
    if echo "$json" | jq -e 'if type=="array" then true else false end' > /dev/null; then
        local count=$(echo "$json" | jq '. | length')
        if [ "$count" -ge "$min_count" ]; then
            echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $count${NC}"
            return 0
        else
            echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $count (–æ–∂–∏–¥–∞–ª–æ—Å—å –º–∏–Ω–∏–º—É–º $min_count)${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚úó –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
log_test_result() {
    local test_name="$1"
    local result="$2"
    
    if [ "$result" = "pass" ]; then
        PASSED_TESTS=$((PASSED_TESTS + 1))
        echo -e "${GREEN}‚úì –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: $test_name${NC}"
    else
        FAILED_TESTS+=("$test_name")
        echo -e "${RED}‚úó –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: $test_name${NC}"
    fi
}

echo -e "${BLUE}üîç –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ API...${NC}\n"

echo -e "${BLUE}1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞...${NC}"
echo "–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ Xiaomi:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" -d "q=xiaomi")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
    if check_json_structure "$RESPONSE_BODY" "items" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" && \
       check_json_structure "$RESPONSE_BODY" "total" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ" && \
       check_results_count "$RESPONSE_BODY" 1; then
        log_test_result "–ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫" "pass"
    else
        log_test_result "–ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫" "fail"
    fi
else
    log_test_result "–ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...${NC}"
echo "–ü–æ–∏—Å–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–¥–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∏ –Ω–∞—É—à–Ω–∏–∫–∏):"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=—Å–º–∞—Ä—Ç—Ñ–æ–Ω –Ω–∞—É—à–Ω–∏–∫–∏" -d "page=1" -d "page_size=2")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞
    if check_json_structure "$RESPONSE_BODY" "items" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" && \
       check_json_structure "$RESPONSE_BODY" "total" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ" && \
       check_results_count "$RESPONSE_BODY" 2; then
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–º—É
        items_count=$(echo "$RESPONSE_BODY" | jq '.items | length')
        if [ "$items_count" -eq 2 ]; then
            echo -e "${GREEN}‚úì –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–º—É${NC}"
            log_test_result "–ü–æ–∏—Å–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π" "pass"
        else
            echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: $items_count (–æ–∂–∏–¥–∞–ª–æ—Å—å: 2)${NC}"
            log_test_result "–ü–æ–∏—Å–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π" "fail"
        fi
    else
        log_test_result "–ü–æ–∏—Å–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...${NC}"
echo "–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=–∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞ –ø—ã–ª–µ—Å–æ—Å" \
    --data-urlencode "category_id=–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if check_json_structure "$RESPONSE_BODY" "items" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" && \
       check_json_structure "$RESPONSE_BODY" "total" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ" && \
       check_results_count "$RESPONSE_BODY" 1; then
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        wrong_category=$(echo "$RESPONSE_BODY" | jq '.items[] | select(.category != "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞") | .id')
        if [ -z "$wrong_category" ]; then
            echo -e "${GREEN}‚úì –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" "pass"
        else
            echo -e "${RED}‚úó –ù–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –∏–∑ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" "fail"
        fi
    else
        log_test_result "–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è...${NC}"
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è '—Å–º–∞' (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '—Å–º–∞—Ä—Ç—Ñ–æ–Ω'):"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/suggest" \
    --data-urlencode "q=—Å–º–∞" -d "limit=5")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏ –∏—Ö —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
    if check_array_response "$RESPONSE_BODY" 1; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤–∞ "—Å–º–∞—Ä—Ç—Ñ–æ–Ω" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
        product_name=$(echo "$RESPONSE_BODY" | jq -r '.[0].name | ascii_downcase | split(" ")[0]')
        if [[ "${product_name,,}" == "—Å–º–∞—Ä—Ç—Ñ–æ–Ω" ]]; then
            echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ —Å–ª–æ–≤–∞ '—Å–º–∞—Ä—Ç—Ñ–æ–Ω'${NC}"
            log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" "pass"
        else
            echo -e "${RED}‚úó –ü–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ '—Å–º–∞—Ä—Ç—Ñ–æ–Ω', –ø–æ–ª—É—á–µ–Ω–æ: $product_name${NC}"
            log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" "fail"
        fi
    else
        log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" "fail"
    fi
else
    log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤...${NC}"
echo "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è Xiaomi Redmi Note 11 (ID=1):"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET "$BASE_URL/catalog/search/similar/1?limit=5")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–æ –Ω–µ–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    if check_array_response "$RESPONSE_BODY" 1; then
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
        if echo "$RESPONSE_BODY" | jq -e '.[0] | has("product_id", "product_name", "category")' > /dev/null; then
            echo -e "${GREEN}‚úì –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤" "pass"
        else
            echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤" "fail"
        fi
    else
        log_test_result "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º...${NC}"
echo "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    -d "q=abcdefghijklmnopqrstuvwxyz123456789")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—É—Å—Ç—ã–µ, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è
    items_count=$(echo "$RESPONSE_BODY" | jq '.items | length')
    total=$(echo "$RESPONSE_BODY" | jq '.total')
    
    if [ "$items_count" -eq 0 ] && [ "$total" -eq 0 ]; then
        echo -e "${GREEN}‚úì –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞${NC}"
        log_test_result "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞" "pass"
    else
        echo -e "${RED}‚úó –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞${NC}"
        log_test_result "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º...${NC}"
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è '–ø—ã':"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/suggest" \
    --data-urlencode "q=–ø—ã" -d "limit=10")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–æ –º–∞—Å—Å–∏–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ –Ω–µ—Ç)
    if echo "$RESPONSE_BODY" | jq -e 'if type=="array" then true else false end' > /dev/null; then
        log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º" "pass"
    else
        echo -e "${RED}‚úó –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º${NC}"
        log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º" "fail"
    fi
else
    log_test_result "–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª–∞–º–∏...${NC}"
echo "–ü–æ–∏—Å–∫ —Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=!@#$%^&*")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
    if check_json_structure "$RESPONSE_BODY" "items" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" && \
       check_json_structure "$RESPONSE_BODY" "total" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"; then
        log_test_result "–ü–æ–∏—Å–∫ —Å–æ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏" "pass"
    else
        log_test_result "–ü–æ–∏—Å–∫ —Å–æ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ —Å–æ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}9Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID...${NC}"
echo "–ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ ID:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET "$BASE_URL/catalog/search/similar/999999?limit=5")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∞–µ–º 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
if check_status "$response" "404"; then
    log_test_result "–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID" "pass"
else
    log_test_result "–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}üîü –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏...${NC}"
echo "–ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–º–æ—â–Ω–æ—Å—Ç—å':"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=–º–æ—â–Ω–æ—Å—Ç—å" -d "page=1" -d "page_size=10")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if check_status "$response"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –Ω—É–∂–Ω—ã–º —Å–ª–æ–≤–æ–º –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    if check_json_structure "$RESPONSE_BODY" "items" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤–∞, –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ—Å—è —Å "–º–æ—â–Ω–æ—Å—Ç"
        descriptions=$(echo "$RESPONSE_BODY" | jq -r '.items[].description')
        if echo "$descriptions" | grep -iP '–º–æ—â–Ω–æ—Å—Ç\w*' > /dev/null; then
            echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–æ–≤–æ –æ –º–æ—â–Ω–æ—Å—Ç–∏${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏" "pass"
        else
            echo -e "${RED}‚úó –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä —Å–æ —Å–ª–æ–≤–æ–º –æ –º–æ—â–Ω–æ—Å—Ç–∏${NC}"
            log_test_result "–ü–æ–∏—Å–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏" "fail"
        fi
    else
        log_test_result "–ü–æ–∏—Å–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏" "fail"
    fi
else
    log_test_result "–ü–æ–∏—Å–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ 422

echo -e "${BLUE}1Ô∏è‚É£1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏...${NC}"
echo "–ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=—Å–º–∞—Ä—Ç—Ñ–æ–Ω" -d "page=-1")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
if check_status "$response" "422"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ FastAPI
    if echo "$RESPONSE_BODY" | jq -e '.detail[] | select(.loc[1] == "page")' > /dev/null; then
        echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ page${NC}"
        log_test_result "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è" "pass"
    else
        echo -e "${RED}‚úó –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ page${NC}"
        log_test_result "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è" "fail"
    fi
else
    log_test_result "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}1Ô∏è‚É£2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...${NC}"
echo "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET -G "$BASE_URL/catalog/search/search" \
    --data-urlencode "q=—Å–º–∞—Ä—Ç—Ñ–æ–Ω" -d "page_size=1000")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if check_status "$response" "422"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ FastAPI
    if echo "$RESPONSE_BODY" | jq -e '.detail[] | select(.loc[1] == "page_size")' > /dev/null; then
        echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ page_size${NC}"
        log_test_result "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã" "pass"
    else
        echo -e "${RED}‚úó –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ page_size${NC}"
        log_test_result "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã" "fail"
    fi
else
    log_test_result "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã" "fail"
fi
echo -e "\n${BLUE}----------------------------${NC}\n"

echo -e "${BLUE}1Ô∏è‚É£3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ q...${NC}"
echo "–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –±–µ–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET "$BASE_URL/catalog/search/search")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø–æ–∏—Å–∫–∞
if check_status "$response" "422"; then
    RESPONSE_BODY=$(get_response_body "$response")
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$RESPONSE_BODY" | jq '.'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ FastAPI
    if echo "$RESPONSE_BODY" | jq -e '.detail[] | select(.loc[1] == "q")' > /dev/null; then
        echo -e "${GREEN}‚úì –ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ q${NC}"
        log_test_result "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞" "pass"
    else
        echo -e "${RED}‚úó –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ q${NC}"
        log_test_result "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞" "fail"
    fi
else
    log_test_result "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞" "fail"
fi

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo -e "\n${BLUE}=== –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===${NC}"
if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã ($PASSED_TESTS –∏–∑ $TOTAL_TESTS) —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ $PASSED_TESTS –∏–∑ $TOTAL_TESTS —Ç–µ—Å—Ç–æ–≤${NC}"
    if [ ${#FAILED_TESTS[@]} -gt 0 ]; then
        echo -e "\n${RED}–ù–µ–ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:${NC}"
        for test in "${FAILED_TESTS[@]}"; do
            echo -e "${RED}  - $test${NC}"
        done
    fi
    exit 1
fi
