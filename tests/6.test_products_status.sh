#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
TOTAL_TESTS=10
PASSED_TESTS=0
declare -a FAILED_TESTS=()

check_status() {
    local response="$1"
    local expected_status="${2:-200}"
    local http_code=$(echo "$response" | grep -oP 'HTTP_CODE:\K[0-9]+' || echo "unknown")
    
    if [[ "$http_code" == "$expected_status" ]]; then
        echo -e "${GREEN}‚úì HTTP —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–Ω—ã–π: $http_code${NC}"
        return 0
    else
        echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: $http_code (–æ–∂–∏–¥–∞–ª—Å—è: $expected_status)${NC}"
        return 1
    fi
}

get_response_body() {
    local response="$1"
    echo "$response" | sed '$ d' || echo "$response"
}

log_test_result() {
    local test_name="$1"
    if [[ $2 -eq 0 ]]; then
        ((PASSED_TESTS++))
        echo -e "${GREEN}‚úì –¢–µ—Å—Ç '$test_name' –ø—Ä–æ–π–¥–µ–Ω${NC}"
    else
        FAILED_TESTS+=("$test_name")
        echo -e "${RED}‚úó –¢–µ—Å—Ç '$test_name' –Ω–µ –ø—Ä–æ–π–¥–µ–Ω${NC}"
    fi
}

should_exit() {
    if [[ "${#FAILED_TESTS[@]}" -gt 0 ]]; then
        echo -e "\n${RED}‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.${NC}"
        echo -e "${RED}–ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã: ${FAILED_TESTS[*]}${NC}"
        exit 1
    fi
}

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
PGHOST="localhost"
PGPORT="5435"
PGUSER="postgres"
PGPASSWORD="123"
PGDATABASE="meowshop"

export PGPASSWORD="$PGPASSWORD"

echo -e "\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤..."

# 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
echo -e "\n1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞..."
ADMIN_USERNAME="adminUser$(date +%s)"
ADMIN_PASSWORD="password123"
ADMIN_EMAIL="${ADMIN_USERNAME}@example.com"

REGISTER_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST http://localhost:8000/auth/register \
  -H "Content-Type: application/json" \
  -d "{\"username\": \"$ADMIN_USERNAME\",\"email\": \"$ADMIN_EMAIL\",\"password\": \"$ADMIN_PASSWORD\"}")

RESPONSE_BODY=$(get_response_body "$REGISTER_RESPONSE")
echo "–û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:"
echo "$RESPONSE_BODY" | jq '.'

TEST_RESULT=0
if ! check_status "$REGISTER_RESPONSE" "201"; then
    TEST_RESULT=1
fi
log_test_result "register-admin" $TEST_RESULT

# 2. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞
echo -e "\n2Ô∏è‚É£ –î–µ–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º..."
ADMIN_USER_ID=$(psql -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE" -t \
  -c "SELECT user_id FROM \"Users\" WHERE username = '$ADMIN_USERNAME';" | tr -d '[:space:]')

if [[ -z "$ADMIN_USER_ID" ]]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å user_id –∞–¥–º–∏–Ω–∞${NC}"
    log_test_result "get-admin-id" 1
else
    echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω user_id = $ADMIN_USER_ID${NC}"
    
    UPDATE_RESULT=$(psql -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE" -t \
        -c "UPDATE \"Users\" SET role = 'admin' WHERE user_id = $ADMIN_USER_ID;")

    if [[ "$UPDATE_RESULT" == "UPDATE 1" ]]; then
        echo -e "${GREEN}‚úì –†–æ–ª—å –∞–¥–º–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
        log_test_result "set-admin-role" 0
    else
        echo -e "${RED}‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞${NC}"
        log_test_result "set-admin-role" 1
    fi
fi

# 3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
echo -e "\n3Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω..."
LOGIN_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST http://localhost:8000/auth/login \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"$ADMIN_USERNAME\",\"password\":\"$ADMIN_PASSWORD\"}")

RESPONSE_BODY=$(get_response_body "$LOGIN_RESPONSE")
echo "–û—Ç–≤–µ—Ç –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é:"
echo "$RESPONSE_BODY" | jq '.'

TEST_RESULT=0
if ! check_status "$LOGIN_RESPONSE" "200"; then
    TEST_RESULT=1
fi

TOKEN=$(echo "$RESPONSE_BODY" | jq -r '.access_token')
if [[ "$TOKEN" == "null" || -z "$TOKEN" ]]; then
    echo -e "${RED}‚úó –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω${NC}"
    TEST_RESULT=1
fi
log_test_result "admin-login" $TEST_RESULT

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
if [[ "$TOKEN" == "null" || -z "$TOKEN" ]]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç—ã.${NC}"
    should_exit
fi

SELLER_ID=2
PRODUCT_ID=4

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo -e "\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤..."
INITIAL_STATE=$(curl -s -w "\nHTTP_CODE:%{http_code}" "http://localhost:8000/catalog/products")

RESPONSE_BODY=$(get_response_body "$INITIAL_STATE")
echo "–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:"
echo "$RESPONSE_BODY" | jq '.products[] | select(.seller_id == 2) | {product_id, title, status}'

TEST_RESULT=0
if ! check_status "$INITIAL_STATE" "200"; then
    TEST_RESULT=1
fi
log_test_result "check-initial-state" $TEST_RESULT

# 5. –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞
echo -e "\n5Ô∏è‚É£ –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞–≤—Ü–∞ seller_id=$SELLER_ID..."
DISABLE_ALL_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X PUT "http://localhost:8000/admin/products/disable_all/$SELLER_ID" \
  -H "Authorization: Bearer $TOKEN")

RESPONSE_BODY=$(get_response_body "$DISABLE_ALL_RESPONSE")
echo "–û—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤:"
echo "$RESPONSE_BODY" | jq '.'

TEST_RESULT=0
if ! check_status "$DISABLE_ALL_RESPONSE" "200"; then
    TEST_RESULT=1
fi

if [[ "$(echo "$RESPONSE_BODY" | jq -r '.detail')" != *"disabled successfully"* ]]; then
    echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é${NC}"
    TEST_RESULT=1
fi
log_test_result "disable-all-products" $TEST_RESULT

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
echo -e "\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã..."
DISABLED_STATE=$(curl -s -w "\nHTTP_CODE:%{http_code}" "http://localhost:8000/catalog/products")

RESPONSE_BODY=$(get_response_body "$DISABLED_STATE")
echo "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:"
echo "$RESPONSE_BODY" | jq '.products[] | select(.seller_id == 2) | {product_id, title, status}'

TEST_RESULT=0
if ! check_status "$DISABLED_STATE" "200"; then
    TEST_RESULT=1
fi

DISABLED_COUNT=$(echo "$RESPONSE_BODY" | jq '[.products[] | select(.seller_id == 2 and .status == "disabled")] | length')
if [[ "$DISABLED_COUNT" -eq 0 ]]; then
    echo -e "${RED}‚úó –¢–æ–≤–∞—Ä—ã –Ω–µ –±—ã–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã${NC}"
    TEST_RESULT=1
fi
log_test_result "verify-disabled-state" $TEST_RESULT

# 7. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
echo -e "\n7Ô∏è‚É£ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä product_id=$PRODUCT_ID..."
ENABLE_ONE_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X PUT "http://localhost:8000/admin/products/enable/$PRODUCT_ID" \
  -H "Authorization: Bearer $TOKEN")

RESPONSE_BODY=$(get_response_body "$ENABLE_ONE_RESPONSE")
echo "–û—Ç–≤–µ—Ç –Ω–∞ –≤–∫–ª—é—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:"
echo "$RESPONSE_BODY" | jq '.'

TEST_RESULT=0
if ! check_status "$ENABLE_ONE_RESPONSE" "200"; then
    TEST_RESULT=1
fi

if [[ "$(echo "$RESPONSE_BODY" | jq -r '.detail')" != *"enabled successfully"* ]]; then
    echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é${NC}"
    TEST_RESULT=1
fi
log_test_result "enable-single-product" $TEST_RESULT

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
echo -e "\n8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞..."
SINGLE_ENABLED_STATE=$(curl -s -w "\nHTTP_CODE:%{http_code}" "http://localhost:8000/catalog/products")

RESPONSE_BODY=$(get_response_body "$SINGLE_ENABLED_STATE")
echo "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:"
echo "$RESPONSE_BODY" | jq '.products[] | select(.product_id == 4) | {product_id, title, status}'

TEST_RESULT=0
if ! check_status "$SINGLE_ENABLED_STATE" "200"; then
    TEST_RESULT=1
fi

PRODUCT_STATUS=$(echo "$RESPONSE_BODY" | jq -r '.products[] | select(.product_id == 4) | .status')
if [[ "$PRODUCT_STATUS" != "available" ]]; then
    echo -e "${RED}‚úó –¢–æ–≤–∞—Ä –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
    TEST_RESULT=1
fi
log_test_result "verify-single-enabled" $TEST_RESULT

# 9. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
echo -e "\n9Ô∏è‚É£ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞–≤—Ü–∞ seller_id=$SELLER_ID..."
ENABLE_ALL_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X PUT "http://localhost:8000/admin/products/enable_all/$SELLER_ID" \
  -H "Authorization: Bearer $TOKEN")

RESPONSE_BODY=$(get_response_body "$ENABLE_ALL_RESPONSE")
echo "–û—Ç–≤–µ—Ç –Ω–∞ –≤–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤:"
echo "$RESPONSE_BODY" | jq '.'

TEST_RESULT=0
if ! check_status "$ENABLE_ALL_RESPONSE" "200"; then
    TEST_RESULT=1
fi

if [[ "$(echo "$RESPONSE_BODY" | jq -r '.detail')" != *"enabled successfully"* ]]; then
    echo -e "${RED}‚úó –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤${NC}"
    TEST_RESULT=1
fi
log_test_result "enable-all-products" $TEST_RESULT

# 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "\nüîü –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤..."
FINAL_STATE=$(curl -s -w "\nHTTP_CODE:%{http_code}" "http://localhost:8000/catalog/products")

RESPONSE_BODY=$(get_response_body "$FINAL_STATE")
echo "–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:"
echo "$RESPONSE_BODY" | jq '.products[] | select(.seller_id == 2) | {product_id, title, status}'

TEST_RESULT=0
if ! check_status "$FINAL_STATE" "200"; then
    TEST_RESULT=1
fi

AVAILABLE_COUNT=$(echo "$RESPONSE_BODY" | jq '[.products[] | select(.seller_id == 2 and .status == "available")] | length')
if [[ "$AVAILABLE_COUNT" -eq 0 ]]; then
    echo -e "${RED}‚úó –¢–æ–≤–∞—Ä—ã –Ω–µ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã${NC}"
    TEST_RESULT=1
fi
log_test_result "verify-final-state" $TEST_RESULT

# –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
echo -e "\n=== –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ==="
if [ ${#FAILED_TESTS[@]} -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã ($PASSED_TESTS –∏–∑ $TOTAL_TESTS) —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ ${#FAILED_TESTS[@]} –∏–∑ $TOTAL_TESTS —Ç–µ—Å—Ç–æ–≤${NC}"
    echo -e "${RED}–ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã: ${FAILED_TESTS[*]}${NC}"
    exit 1
fi
